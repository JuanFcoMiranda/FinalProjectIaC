name: Terraform Plan

on:
  push:
    branches: 
      - main

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_ENV: ${{ github.event.inputs.environment || 'dev' }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
      CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      LOCATION: ${{ secrets.LOCATION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure Resource Group exists
        run: |
          echo "Checking Resource Group: $RESOURCE_GROUP"
          if ! az group show --name "$RESOURCE_GROUP" &>/dev/null; then
            echo "Resource Group not found. Creating..."
            az group create --name "$RESOURCE_GROUP" --location "$LOCATION"
          else
            echo "Resource Group already exists."
          fi

      - name: Ensure Storage Account exists
        run: |
          echo "Checking Storage Account: $STORAGE_ACCOUNT"
          if ! az storage account show --name "$STORAGE_ACCOUNT" --resource-group "$RESOURCE_GROUP" &>/dev/null; then
            echo "Storage Account not found. Creating..."
            az storage account create \
              --name "$STORAGE_ACCOUNT" \
              --resource-group "$RESOURCE_GROUP" \
              --location "$LOCATION" \
              --sku Standard_LRS \
              --kind StorageV2 \
              --allow-blob-public-access false \
              --min-tls-version TLS1_2
            echo "Waiting for Storage Account to be ready..."
            sleep 20
          else
            echo "Storage Account already exists."
          fi

      - name: Ensure Blob Container exists
        run: |
          ACCOUNT_KEY=$(az storage account keys list --resource-group "$RESOURCE_GROUP" --account-name "$STORAGE_ACCOUNT" --query "[0].value" -o tsv)
          echo "Checking Blob Container: $CONTAINER_NAME"
          if ! az storage container show --name "$CONTAINER_NAME" --account-name "$STORAGE_ACCOUNT" --account-key "$ACCOUNT_KEY" &>/dev/null; then
            echo "Blob Container not found. Creating..."
            az storage container create --name "$CONTAINER_NAME" --account-name "$STORAGE_ACCOUNT" --account-key "$ACCOUNT_KEY"
          else
            echo "Blob Container already exists."
          fi
      
      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=environments/${TF_ENV}/terraform.tfvars -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v5
        with:
          name: terraform-plan-${{ env.TF_ENV }}
          path: tfplan
